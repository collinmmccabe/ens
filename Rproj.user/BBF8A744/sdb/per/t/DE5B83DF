{
    "collab_server" : "",
    "contents" : "#####################################\n#  Analyze & Predict Eff Net Size   #\n#               - - -               #\n#      Compare spread times of      #\n#  maximally-complete, Erdos-Renyi, #\n#  & empirical graphs (w PGLS)      #\n#               - - -               #\n#        CM McCabe & CL Nunn        #\n#####################################\n\n# Load pkg for model 2 regressions\nlibrary(lmodel2)\nlibrary(kSamples)\nlibrary(dgof)\n\n# Load pkgs for graphing\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(gridExtra)\nlibrary(vioplot)\nlibrary(plotrix)\n\n# Load pkgs for pgls\nlibrary(ape)\nlibrary(caper)\n\n\n#------------#\n# Max Models #\n#------------#\n\n# Effective_SI_max <- readRDS(\"./sims_maximal/max2/Effective_SI_max2\")\nEffective_SI_max <- readRDS(\"./Effective_SI_max_unif\")\n\nnmax=80\n\nSI_max_output <- data.frame(days=Effective_SI_max[[3]][1,which(Effective_SI_max[[3]][2,]==0)], n=3)\nfor(i in 4:nmax) {\n  tmp <- data.frame(days=Effective_SI_max[[i]][1,which(Effective_SI_max[[i]][2,]==0)], n=i)\n  SI_max_output <- rbind(SI_max_output, tmp)\n}\n\nsimaxlm<-lm(n ~ days, data=SI_max_output); summary(simaxlm)\n\nggplot(SI_max_output,aes(x=days,y=n)) + theme_classic() + scale_x_continuous(limits = c(0, 49)) + theme(text=element_text(family=\"Lato\", size=18)) + geom_bin2d(bins=49)  + xlab(\"Outbreak Duration (days)\") + ylab(\"Group Size\")\n#+ geom_abline(slope = simaxlm$coefficients[2], intercept = simaxlm$coefficients[1], col=\"red\", size=2)\n#+ annotate(geom=\"text\", x=4, y=180, label=\"y = -28.31 + 8.35 * x\\nAdj. R-sq. = 0.425\", color=\"black\")\n#gg1.ols + ggtitle(\"Relationship between Network Size and Outbreak Duration\\nfrom 197,000 SI Simulations on Maximally-complete Networks, with OLS Trendline\") + labs(x=\"Outbreak duration (days)\", y=\"Network size\")\n##+ theme(panel.background = element_rect(fill = \"black\"))\n\nSImod2 <- lmodel2(log(n)~days, data=SI_max_output, range.y = \"relative\", range.x = \"relative\")\n\ngg1.rma <- ggplot(SI_max_output,aes(x=days,y=log(n))) + theme_classic() + geom_bin2d(bins=16) + geom_abline(slope = SImod2$regression.results$Slope[4], intercept = SImod2$regression.results$Intercept[4], col=\"red\", size=2) + annotate(geom=\"text\", x=27, y=1.5, label=\"y = 0.85 + 0.21 * x\\nR-sq. = 0.470\", color=\"black\")\ngg1.rma + ggtitle(\"Relationship between log-transformed Network Size and Outbreak Duration\\nfrom 77,000 SI Simulations on Maximally-complete Networks, with RMA Trendline\") + labs(x=\"Outbreak duration (days)\", y=\"log [ Network size ]\")\n\n#------------------------------------------------\n\nEffective_SIS_max <- readRDS(\"Effective_SIS_max2\")\n\nSIS_max_output_eq <- data.frame(eq=Effective_SIS_max[[3]][3,which(Effective_SIS_max[[3]][1,]==50)]/6, n=3)\nfor(i in 4:nmax) {\n  tmp <- data.frame(eq=Effective_SIS_max[[i]][3,which(Effective_SIS_max[[i]][1,]==50)]/i, n=i)\n  SIS_max_output_eq <- rbind(SIS_max_output_eq, tmp)\n}\n\nsummary(lm(n ~ eq, data=SIS_max_output_eq))\nSISmod2 <- lmodel2(n ~ eq, data=SIS_max_output_eq, range.y = \"relative\", range.x = \"relative\")\n\n\nSIS_max_output_ext <- data.frame(days=Effective_SIS_max[[3]][1,which(Effective_SIS_max[[3]][1,]<50)], n=3)\nfor(i in 4:nmax) {\n  tmp <- data.frame(days=Effective_SIS_max[[i]][1,which(Effective_SIS_max[[i]][1,]<50)], n=i)\n  SIS_max_output_ext <- rbind(SIS_max_output_ext, tmp)\n}\n\nsismaxlm <- lm(n ~ days, data=SIS_max_output_ext); summary(sismaxlm)\n\ngg2.ols <- ggplot(SIS_max_output_ext,aes(x=days,y=n)) + theme_classic() + geom_bin2d(bins=40) + geom_abline(slope = sismaxlm$coefficients[2], intercept = sismaxlm$coefficients[1], col=\"red\", size=2) + annotate(geom=\"text\", x=35, y=180, label=\"y = 104.69 - 2.57 * x\\nAdj. R-sq. = 0.031\", color=\"black\")\ngg2.ols + ggtitle(\"Relationship between Network Size and Extinction Time\\nfrom 197,000 SIS Simulations on Maximally-complete Networks, with OLS Trendline\") + labs(x=\"Extinction time (days)\", y=\"Network size\")\n\nSISmod2 <- lmodel2(log(n)~days, data=SIS_max_output_ext, range.y = \"relative\", range.x = \"relative\")\n\ngg2.rma <- ggplot(SIS_max_output_ext,aes(x=days,y=log(n)))+ theme_classic() + geom_bin2d(bins=23) + geom_abline(slope = SISmod2$regression.results$Slope[4], intercept = SISmod2$regression.results$Intercept[4], col=\"red\", size=2) + annotate(geom=\"text\", x=35, y=4, label=\"y = 5.41 - 0.60 * x\\nR-sq. = 0.106\", color=\"black\")\ngg2.rma + ggtitle(\"Relationship between log-transformed Network Size and Extinction Time\\nfrom 197,000 SIS Simulations on Maximally-complete Networks, with RMA Trendline\") + labs(x=\"Extinction time (days)\", y=\"log [ Network size ]\")\n\n#------------------------------------------------\n\nEffective_STD_max <- readRDS(\"Effective_STD_max2\")\n\nSTD_max_output <- data.frame(days=Effective_STD_max[[3]][1,which(Effective_STD_max[[3]][2,]==0)], n=3)\nfor(i in 4:nmax) {\n  tmp <- data.frame(days=Effective_STD_max[[i]][1,which(Effective_STD_max[[i]][2,]==0)], n=i)\n  STD_max_output <- rbind(STD_max_output, tmp)\n}\n\nstdmaxlm<-lm(n ~ days, data=STD_max_output); summary(stdmaxlm)\n\ngg3.ols <- ggplot(STD_max_output,aes(x=days,y=n)) + theme_classic() + geom_bin2d(bins=40) + geom_abline(slope = stdmaxlm$coefficients[2], intercept = stdmaxlm$coefficients[1], col=\"red\", size=2) + annotate(geom=\"text\", x=75, y=7, label=\"y = 36.08 + 3.50 * x\\nAdj. R-sq. = 0.195\", color=\"black\")\ngg3.ols + ggtitle(\"Relationship between Network Size and Outbreak Duration\\nfrom 197,000 STD Simulations on Maximally-complete Networks, with OLS Trendline\") + labs(x=\"Outbreak duration (days)\", y=\"Network size\")\n\nSTDmod2 <- lmodel2(log(n)~days, data=STD_max_output, range.y = \"relative\", range.x = \"relative\")\n\ngg3.rma <- ggplot(STD_max_output,aes(x=days,y=log(n))) + theme_classic() + geom_bin2d(bins=17) + geom_abline(slope = STDmod2$regression.results$Slope[4], intercept = STDmod2$regression.results$Intercept[4], col=\"red\", size=2) + annotate(geom=\"text\", x=75, y=2, label=\"y = 0.62 + 0.20 * x\\nR-sq. = 0.240\", color=\"black\")\ngg3.rma + ggtitle(\"Relationship between log-transformed Network Size and Outbreak Duration\\nfrom 93,000 STD Simulations on Maximally-complete Networks, with RMA Trendline\") + labs(x=\"Outbreak duration (days)\", y=\"log [ Network size ]\")\n\n#------------------------------------------------\n\nEffective_SIR_max <- readRDS(\"./Effective_SIR_max_unif\")\n\nSIR_max_output <- data.frame(days=Effective_SIR_max[[3]][1,which(Effective_SIR_max[[3]][4,]==3)], peak=Effective_SIR_max[[3]][5,which(Effective_SIR_max[[3]][4,]==3)], n=3)\nfor(i in 4:nmax) {\n  tmp <- data.frame(days=Effective_SIR_max[[i]][1,which(Effective_SIR_max[[i]][4,]==i)], peak=Effective_SIR_max[[i]][5,which(Effective_SIR_max[[i]][4,]==i)], n=i)\n  SIR_max_output <- rbind(SIR_max_output, tmp)\n}\n\n#sirmaxlm <- lm(n ~ days, data=SIR_max_output); summary(sirmaxlm)\n\n#gg4.ols <- ggplot(SIR_max_output,aes(x=days,y=n)) + theme_classic() + geom_bin2d(bins=40) + geom_abline(slope = sirmaxlm$coefficients[2], intercept = sirmaxlm$coefficients[1], col=\"red\", size=2) + annotate(geom=\"text\", x=150, y=12, label=\"y = -18.89 + 1.97 * x\\nAdj. R-sq. = 0.331\", color=\"black\")\n#gg4.ols + ggtitle(\"Relationship between Network Size and Outbreak Duration\\nfrom 197,000 SIR Simulations on Maximally-complete Networks, with OLS Trendline\") + labs(x=\"Outbreak duration (days)\", y=\"Network size\")\n\nSIRmod2 <- lmodel2(log(n)~days, data=SIR_max_output, range.y = \"relative\", range.x = \"relative\")\n\ngg4.rma <- ggplot(SIR_max_output,aes(x=days,y=log(n))) + theme_classic() + geom_bin2d(bins=16) + geom_abline(slope = SIRmod2$regression.results$Slope[4], intercept = SIRmod2$regression.results$Intercept[4], col=\"red\", size=2)+ annotate(geom=\"text\", x=125, y=1.5, label=\"y = 0.31 + 0.07 * x\\nR-sq. = 0.376\", color=\"black\")\ngg4.rma + ggtitle(\"Relationship between log-transformed Network Size and Outbreak Duration\\nfrom 77,000 SIR Simulations on Maximally-complete Networks, with RMA Trendline\") + labs(x=\"Outbreak duration (days)\", y=\"log [ Network size ]\")\n\n#------------------------------------------------\n\n#grid.arrange(gg1.ols+ggtitle(\"A. SI Model\")+theme(legend.position=\"none\", axis.title=element_blank()), gg2.ols+ggtitle(\"B. SIS Model\")+theme(legend.position=\"tion\\nfrom Transmission Simulations on Maximally-complete Networks, with OLS Trendlines\", gp=gpar(fontsize=16, fontface=\"bold\")), bottom none\", axis.title=element_blank()), gg3.ols+ggtitle(\"C. STD Model\")+theme(legend.position=\"none\", axis.title=element_blank()), gg4.ols+ggtitle(\"D. SIR Model\")+theme(legend.position=\"none\", axis.title=element_blank()), top = textGrob(\"Relationship between Network Size and Outbreak Duration\\nfrom Transmission Simulations on Maximally-complete Networks, with OLS Trendlines\", gp=gpar(fontsize=16, fontface=\"bold\")), bottom = \"Outbreak Duration (Days)\", left=\"Network Size\", layout_matrix = matrix(c(1,2,3,4), ncol=2, byrow=TRUE))\n\ngrid.arrange(gg1.rma+ggtitle(\"A. SI Model\")+theme(legend.position=\"none\", axis.title=element_blank()), gg4.rma+ggtitle(\"B. SIR Model\")+theme(legend.position=\"none\", axis.title=element_blank()), top = textGrob(\"Relationship between log-transformed Network Size and Outbreak Duration\\nfrom Transmission Simulations on Maximally-complete Networks, with RMA Trendlines\", gp=gpar(fontsize=16, fontface=\"bold\")), bottom = \"Outbreak Duration (Days)\", left=\"log [ Network size ]\", layout_matrix = matrix(c(1,2), ncol=2, byrow=TRUE))\n\n\n\n#----------------#\n#   Comparison   #\n#  of ERG v Max  #\n#----------------#\n\nefgrsz.SI <- function(x) {\n  y = round(exp(SImod2$regression.results$Intercept[4] + SImod2$regression.results$Slope[4]*x))\n  return(y)\n}\n\nEffective_SI_erg <- readRDS(\"Effective_SI_erg\")\n\nSI_erg_output <- data.frame(obs_mu=NA, obs_sd=NA, exp_mu=NA, exp_sd=NA, kst_D=NA, kst_p=NA, n=NA, p=NA, samp=NA)\nfor (n in c(10, 30, 50)) {\n  for (p in c(15, 25, 35)) {\n    for(i in 1:111) {\n      tmp.obs <- Effective_SI_erg[[n]][[p]][[i]][1,which(Effective_SI_erg[[n]][[p]][[i]][2,]==0)]\n      tmp.exp <- Effective_SI_max[[efgrsz.SI(mean(tmp.obs))]][1,]\n      tmp.kst <- ks.test(jitter(tmp.obs), jitter(tmp.exp))\n      tmp <- data.frame(obs_mu=mean(tmp.obs), obs_sd=sd(tmp.obs), exp_mu=mean(tmp.exp), exp_sd=sd(tmp.exp), kst_D=tmp.kst$statistic, kst_p=tmp.kst$p.value, n=n, p=p, samp=i)\n      SI_erg_output <- rbind(SI_erg_output, tmp)\n    }\n    cat(\"\\n\", \"nodes: \", n, \"// percent: \", p)\n  }\n}\n\npar(oma=c(0, 0, 0, 0))\nlayout(matrix(c(1,1,2,3,4,4), 3, 2, byrow = TRUE))\n\nnx=30; px=25; sx=39\n\n#hist_si <- hist(Effective_SI_max[[efgrsz.SI(mean(Effective_SI_erg[[nx]][[px]][[sx]][1,which(Effective_SI_erg[[nx]][[px]][[sx]][2,]==0)]))]][1,],  xlim=c(6,32), col=rgb(1,0,0,1),  main=\"A. Representative Comparison of Histograms for Outbreak Times\", xlab=\"Outbreak Time (days)\") + hist(Effective_SI_erg[[nx]][[px]][[sx]][1,which(Effective_SI_erg[[nx]][[px]][[sx]][2,]==0)], col=rgb(0,0,1,0.5), add=T)\n\nSIlist <- list(Effective_SI_max[[efgrsz.SI(mean(Effective_SI_erg[[nx]][[px]][[sx]][1,which(Effective_SI_erg[[nx]][[px]][[sx]][2,]==0)]))]][1,], Effective_SI_erg[[nx]][[px]][[sx]][1,which(Effective_SI_erg[[nx]][[px]][[sx]][2,]==0)])\n\npar(mar=c(4, 2, 2, 0))\nmulthist(SIlist, xlab = \"Outbreak duration (days)\", main=\"A. Representative comparison of histograms for outbreak durations\")\n\nSI_erg_output[which(SI_erg_output$n==50 & SI_erg_output$p==15 & SI_erg_output$samp==7),]\n\nmy.vioplot <- function (x, ..., range = 1.5, h = NULL, ylim = NULL, names = NULL,\n                        horizontal = FALSE, col = \"magenta\", border = \"black\", lty = 1,\n                        lwd = 1, rectCol = \"black\", colMed = \"white\", pchMed = 19,\n                        at, add = FALSE, wex = 1, drawRect = TRUE)\n{\n  datas <- list(x, ...)\n  n <- length(datas)\n  if(length(col)==1) col <- rep(col,n)\n  if (missing(at))\n    at <- 1:n\n  upper <- vector(mode = \"numeric\", length = n)\n  lower <- vector(mode = \"numeric\", length = n)\n  q1 <- vector(mode = \"numeric\", length = n)\n  q3 <- vector(mode = \"numeric\", length = n)\n  med <- vector(mode = \"numeric\", length = n)\n  base <- vector(mode = \"list\", length = n)\n  height <- vector(mode = \"list\", length = n)\n  baserange <- c(Inf, -Inf)\n  args <- list(display = \"none\")\n  if (!(is.null(h)))\n    args <- c(args, h = h)\n  for (i in 1:n) {\n    data <- datas[[i]]\n    data.min <- min(data)\n    data.max <- max(data)\n    q1[i] <- quantile(data, 0.25)\n    q3[i] <- quantile(data, 0.75)\n    med[i] <- median(data)\n    iqd <- q3[i] - q1[i]\n    upper[i] <- min(q3[i] + range * iqd, data.max)\n    lower[i] <- max(q1[i] - range * iqd, data.min)\n    est.xlim <- c(min(lower[i], data.min), max(upper[i],\n                                               data.max))\n    smout <- do.call(\"sm.density\", c(list(data, xlim = est.xlim),\n                                     args))\n    hscale <- 0.4/max(smout$estimate) * wex\n    base[[i]] <- smout$eval.points\n    height[[i]] <- smout$estimate * hscale\n    t <- range(base[[i]])\n    baserange[1] <- min(baserange[1], t[1])\n    baserange[2] <- max(baserange[2], t[2])\n  }\n  if (!add) {\n    xlim <- if (n == 1)\n      at + c(-0.5, 0.5)\n    else range(at) + min(diff(at))/2 * c(-1, 1)\n    if (is.null(ylim)) {\n      ylim <- baserange\n    }\n  }\n  if (is.null(names)) {\n    label <- 1:n\n  }\n  else {\n    label <- names\n  }\n  boxwidth <- 0.05 * wex\n  if (!add)\n    plot.new()\n  if (!horizontal) {\n    if (!add) {\n      plot.window(xlim = xlim, ylim = ylim)\n      axis(2)\n      axis(1, at = at, label = label)\n    }\n    box()\n    for (i in 1:n) {\n      polygon(c(at[i] - height[[i]], rev(at[i] + height[[i]])),\n              c(base[[i]], rev(base[[i]])), col = col[i], border = border[i],\n              lty = lty, lwd = lwd)\n      if (drawRect) {\n        lines(at[c(i, i)], c(lower[i], upper[i]), lwd = lwd,\n              lty = lty)\n        rect(at[i] - boxwidth/2, q1[i], at[i] + boxwidth/2,\n             q3[i], col = rectCol)\n        points(at[i], med[i], pch = pchMed, col = colMed)\n      }\n    }\n  }\n  else {\n    if (!add) {\n      plot.window(xlim = ylim, ylim = xlim)\n      axis(1)\n      axis(2, at = at, label = label)\n    }\n    box()\n    for (i in 1:n) {\n      polygon(c(base[[i]], rev(base[[i]])), c(at[i] -\n                                                height[[i]], rev(at[i] + height[[i]])), col = col[i],\n              border = border[i], lty = lty, lwd = lwd)\n      if (drawRect) {\n        lines(c(lower[i], upper[i]), at[c(i, i)], lwd = lwd,\n              lty = lty)\n        rect(q1[i], at[i] - boxwidth/2, q3[i], at[i] +\n               boxwidth/2, col = rectCol)\n        points(med[i], at[i], pch = pchMed, col = colMed)\n      }\n    }\n  }\n  invisible(list(upper = upper, lower = lower, median = med,\n                 q1 = q1, q3 = q3))\n}\n\npar(mar=c(4,5,2,1))\nplot(SI_erg_output$exp_mu[2:1000] ~ SI_erg_output$obs_mu[2:1000], pch=20, bty=\"l\", xlab=\"Mean outbreak duration on random network\", ylab=\"Mean outbreak duration on\\neffective network\", main=\"B. Mean outbreak duration correlation\")\nabline(a=0, b=1, col=\"red\")\n\n#viomu_si <- my.vioplot(SI_erg_output$obs_mu[2:1000], SI_erg_output$exp_mu[2:1000], names=c(\"Observed\", \"Expected\"), col=c(\"red\", \"blue\"), border=c(\"red\", \"blue\")) + title(ylab=\"Mean Outbreak Time\", main=\"C. Distributions of Mean Outbreak Times\")\n\n#viosd_si <- my.vioplot(SI_erg_output$obs_sd[2:1000], SI_erg_output$exp_sd[2:1000], names=c(\"Observed\", \"Expected\"), col=c(\"red\", \"blue\"), border=c(\"red\", \"blue\")) + title(ylab=\"Standard Deviation in Outbreak Time\", main=\"C. Distributions of Standard Deviations in Outbreak Times\")\n\nmatplot(t(data.frame(SI_erg_output$obs_sd[2:1000],SI_erg_output$exp_sd[2:1000])), type=\"b\", pch=20, col=1, lty=1, bty=\"l\", ylab=\"Standard deviations\", xaxt=\"n\", main=\"C. Pairwise comparison of standard deviation\")\naxis(1, at=c(1,2), labels = c(\"Random\", \"Effective\"))\n\nt.test(SI_erg_output$obs_mu[2:1000], SI_erg_output$exp_mu[2:1000], paired = T)\n\n#ks_si <- vioplot(SI_erg_output$kst_D[which(SI_erg_output$p==15 & SI_erg_output$n==50)], SI_erg_output$kst_D[which(SI_erg_output$p==25 & SI_erg_output$n==50)], SI_erg_output$kst_D[which(SI_erg_output$p==35 & SI_erg_output$n==50)], names=c(\"15\", \"25\", \"35\"), col=\"gray\", border=\"gray\") + title(ylab=\"Kolmogorov-Smirnov D-Statistic\",xlab=\"Percent possible ties present\", main=\"D. Distributions of Kolmogorov-Smirnov D-statistics comparing Outbreak Times (for n=50)\")\n#abline(a=0.059, b=0, lty=2)\n\nhist(SI_erg_output$kst_D, xlab=\"Kolmogorov-Smirnov D-statistic\", main=\"D. Distributions of Kolmogorov-Smirnov D-statistics\", col=\"gray\")\n\n##vioplot(SI_erg_output$kst_p[which(SI_erg_output$n==10)], SI_erg_output$kst_p[which(SI_erg_output$n==30)], SI_erg_output$kst_p[which(SI_erg_output$n==50)], names=c(\"10\", \"30\", \"50\"))\n##title(ylab=\"Kolmogorov-Smirnov p-value\",xlab=\"Network size\", main=\"Comparison of Kolmogorov-Smirnov P-values Distributions\\nbetween Various Network Sizes for SI Simulations\")\n\n#mtext(\"Comparison of Distributions in Outbreak Times from Observed (ERG; Red)\\nand Expected (Maximally-complete; Blue) SI Simulation Results\", font=2, side=3, outer=TRUE, line=0)\n\n\n#------------------------------------------------\n\nefgrsz.SIR <- function(x) {\n  y = round(exp(SIRmod2$regression.results$Intercept[4] + SIRmod2$regression.results$Slope[4]*x))\n  return(y)\n}\n\nEffective_SIR_erg <- readRDS(\"Effective_SIR_erg\")\n\nSIR_erg_output <- data.frame(obs_mu=NA, obs_sd=NA, exp_mu=NA, exp_sd=NA, kst_D=NA, kst_p=NA, n=NA, p=NA, samp=NA)\nfor (n in c(10, 30, 50)) {\n  for (p in c(15, 25, 35)) {\n    for(i in 1:111) {\n      tmp.obs <- Effective_SIR_erg[[n]][[p]][[i]][1,which(Effective_SIR_erg[[n]][[p]][[i]][4,]==n)]\n      tmp.exp <- Effective_SIR_max[[efgrsz.SIR(mean(tmp.obs))]][1,]\n      tmp.kst <- ks.test(jitter(tmp.obs), jitter(tmp.exp))\n      tmp <- data.frame(obs_mu=mean(tmp.obs), obs_sd=sd(tmp.obs), exp_mu=mean(tmp.exp), exp_sd=sd(tmp.exp), kst_D=tmp.kst$statistic, kst_p=tmp.kst$p.value, n=n, p=p, samp=i)\n      SIR_erg_output <- rbind(SIR_erg_output, tmp)\n    }\n    cat(\"\\n\", \"nodes: \", n, \"// percent: \", p)\n  }\n}\n\npar(oma=c(0, 0, 0, 0))\nlayout(matrix(c(1,1,2,3,4,4), 3, 2, byrow = TRUE))\n\nnx=30; px=25; sx=39\n\n#hist(Effective_SIR_max[[efgrsz.SIR(mean(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)]))]][1,which(Effective_SIR_max[[efgrsz.SIR(mean(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)]))]][4,]==efgrsz.SIR(mean(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)])))],  xlim=c(0,110) ,col=rgb(0,0,1,0.5),  main=\"A. Representative Comparison of Histograms for Outbreak Times\", xlab=\"Outbreak Time (days)\", breaks=18)\n#hist(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)], col=rgb(1,0,0,0.5), breaks=18, add=T)\n\nSIRlist <- list(Effective_SIR_max[[efgrsz.SIR(mean(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)]))]][1,which(Effective_SIR_max[[efgrsz.SIR(mean(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)]))]][4,]==efgrsz.SIR(mean(Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)])))], Effective_SIR_erg[[nx]][[px]][[sx]][1,which(Effective_SIR_erg[[nx]][[px]][[sx]][4,]==nx)])\n\npar(mar=c(4, 2, 2, 0))\nmulthist(SIRlist, xlab = \"Outbreak duration (days)\", main=\"A. Representative comparison of histograms for outbreak durations\")\n\npar(mar=c(4,5,2,1))\nplot(SIR_erg_output$exp_mu[2:1000] ~ SIR_erg_output$obs_mu[2:1000], pch=20, bty=\"l\", xlab=\"Mean outbreak duration on random network\", ylab=\"Mean outbreak duration on\\neffective network\", main=\"B. Mean outbreak duration correlation\")\nabline(a=0, b=1, col=\"red\")\n\nmatplot(t(data.frame(SIR_erg_output$obs_sd[2:1000],SIR_erg_output$exp_sd[2:1000])), type=\"b\", pch=20, col=1, lty=1, bty=\"l\", ylab=\"Standard deviations\", xaxt=\"n\", main=\"C. Pairwise comparison of standard deviation\")\naxis(1, at=c(1,2), labels = c(\"Random\", \"Effective\"))\n\nhist(SIR_erg_output$kst_D, xlab=\"Kolmogorov-Smirnov D-statistic\", main=\"D. Distributions of Kolmogorov-Smirnov D-statistics\", col=\"gray\")\n",
    "created" : 1491929515479.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3451526838",
    "id" : "DE5B83DF",
    "lastKnownWriteTime" : 1491932564,
    "last_content_update" : 1491932564766,
    "path" : "/media/collin/SSD/Dropbox/Research/Effective Network Modeling/Effective_Network_Size/code/comparisons.R",
    "project_path" : "code/comparisons.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}